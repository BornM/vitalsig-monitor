{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "vpc0a4f35a1b58419b9f": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "172.31.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true"
      }
    },
    "subnet03d3ec3c7fdad3677": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.0.0/20",
        "AvailabilityZone": "eu-central-1c",
        "VpcId": {
          "Ref": "vpc0a4f35a1b58419b9f"
        }
      }
    },
    "subnet0b0d0e1221573deb6": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.16.0/20",
        "AvailabilityZone": "eu-central-1a",
        "VpcId": {
          "Ref": "vpc0a4f35a1b58419b9f"
        }
      }
    },
    "subnet0029a8bb9941bdbf6": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.31.32.0/20",
        "AvailabilityZone": "eu-central-1b",
        "VpcId": {
          "Ref": "vpc0a4f35a1b58419b9f"
        }
      }
    },
    "igw09cc285742015a6aa": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
      }
    },
    "dopt0b590413eb775dac6": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "eu-central-1.compute.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "acl056f9ada45e997b37": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpc0a4f35a1b58419b9f"
        }
      }
    },
    "rtb0f642cba3eacec4f0": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpc0a4f35a1b58419b9f"
        }
      }
    },
    "instancei0b6140f3fd7f85cd8": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": "ami-0ec7f9846da6b0f61",
        "InstanceType": "t2.micro",
        "KeyName": "grafanakeypair",
        "Monitoring": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Grafana2"
          }
        ],
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "subnet0029a8bb9941bdbf6"
            },
            "PrivateIpAddresses": [
              {
                "PrivateIpAddress": "172.31.42.155",
                "Primary": "true"
              }
            ],
            "GroupSet": [
              {
                "Ref": "sglaunchwizard3"
              }
            ],
            "AssociatePublicIpAddress": "true"
          }
        ]
      }
    },
    "s3demovitalsignmonitoring": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "Tags": [
          {
            "Key": "Function",
            "Value": "Data Injection"
          }
        ]
      }
    },
    "queueFailedDataInjectionMessagesfifo": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "DelaySeconds": "0",
        "MaximumMessageSize": "262144",
        "MessageRetentionPeriod": "86400",
        "ReceiveMessageWaitTimeSeconds": "10",
        "VisibilityTimeout": "30"
      }
    },
    "queueRealVitalSignInjectionQueuefifo": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "DelaySeconds": "0",
        "MaximumMessageSize": "262144",
        "MessageRetentionPeriod": "43200",
        "ReceiveMessageWaitTimeSeconds": "1",
        "VisibilityTimeout": "5",
        "RedrivePolicy": {
          "maxReceiveCount": 1,
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "queueFailedDataInjectionMessagesfifo",
              "Arn"
            ]
          }
        }
      }
    },
    "queueSimulatedVitalSignInjectionQueuefifo": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "DelaySeconds": "0",
        "MaximumMessageSize": "262144",
        "MessageRetentionPeriod": "43200",
        "ReceiveMessageWaitTimeSeconds": "1",
        "VisibilityTimeout": "5",
        "RedrivePolicy": {
          "maxReceiveCount": 1,
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "queueFailedDataInjectionMessagesfifo",
              "Arn"
            ]
          }
        }
      }
    },
    "streamVitalSignStream": {
      "Type": "AWS::Kinesis::Stream",
      "Properties": {
        "ShardCount": "1"
      }
    },
    "sgdefault": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "default VPC security group",
        "VpcId": {
          "Ref": "vpc0a4f35a1b58419b9f"
        }
      }
    },
    "sglaunchwizard3": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "launch-wizard-3 created 2023-05-10T09:00:13.027Z",
        "VpcId": {
          "Ref": "vpc0a4f35a1b58419b9f"
        }
      }
    },
    "sgsecuritygroupforinboundnfsdv3lxwwerq3iu": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "[DO NOT DELETE] Security Group that allows inbound NFS traffic for SageMaker Notebooks Domain [d-v3lxwwerq3iu]",
        "VpcId": {
          "Ref": "vpc0a4f35a1b58419b9f"
        },
        "Tags": [
          {
            "Key": "ManagedByAmazonSageMakerResource",
            "Value": "arn:aws:sagemaker:eu-central-1:907041459849:domain/d-v3lxwwerq3iu"
          }
        ]
      }
    },
    "sgsecuritygroupforoutboundnfsdv3lxwwerq3iu": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "[DO NOT DELETE] Security Group that allows outbound NFS traffic for SageMaker Notebooks Domain [d-v3lxwwerq3iu]",
        "VpcId": {
          "Ref": "vpc0a4f35a1b58419b9f"
        },
        "Tags": [
          {
            "Key": "ManagedByAmazonSageMakerResource",
            "Value": "arn:aws:sagemaker:eu-central-1:907041459849:domain/d-v3lxwwerq3iu"
          }
        ]
      }
    },
    "sglaunchwizard1": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "launch-wizard created 2023-05-08T15:46:35.378Z",
        "VpcId": {
          "Ref": "vpc0a4f35a1b58419b9f"
        }
      }
    },
    "sglaunchwizard2": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "launch-wizard-2 created 2023-05-09T10:57:28.953Z",
        "VpcId": {
          "Ref": "vpc0a4f35a1b58419b9f"
        }
      }
    },
    "sqspolicyFailedDataInjectionMessagesfifo": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "Queues": [
          {
            "Ref": "queueFailedDataInjectionMessagesfifo"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__owner_statement",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::907041459849:root"
              },
              "Action": "SQS:*",
              "Resource": {
                "Fn::GetAtt": [
                  "queueFailedDataInjectionMessagesfifo",
                  "Arn"
                ]
              }
            }
          ]
        }
      }
    },
    "sqspolicyRealVitalSignInjectionQueuefifo": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "Queues": [
          {
            "Ref": "queueRealVitalSignInjectionQueuefifo"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__owner_statement",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::907041459849:root"
              },
              "Action": "SQS:*",
              "Resource": {
                "Fn::GetAtt": [
                  "queueRealVitalSignInjectionQueuefifo",
                  "Arn"
                ]
              }
            }
          ]
        }
      }
    },
    "sqspolicySimulatedVitalSignInjectionQueuefifo": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "Queues": [
          {
            "Ref": "queueSimulatedVitalSignInjectionQueuefifo"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "__default_policy_ID",
          "Statement": [
            {
              "Sid": "__owner_statement",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::907041459849:root"
              },
              "Action": "SQS:*",
              "Resource": {
                "Fn::GetAtt": [
                  "queueSimulatedVitalSignInjectionQueuefifo",
                  "Arn"
                ]
              }
            }
          ]
        }
      }
    },
    "acl1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl056f9ada45e997b37"
        }
      }
    },
    "acl2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl056f9ada45e997b37"
        }
      }
    },
    "subnetacl1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl056f9ada45e997b37"
        },
        "SubnetId": {
          "Ref": "subnet03d3ec3c7fdad3677"
        }
      }
    },
    "subnetacl2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl056f9ada45e997b37"
        },
        "SubnetId": {
          "Ref": "subnet0029a8bb9941bdbf6"
        }
      }
    },
    "subnetacl3": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl056f9ada45e997b37"
        },
        "SubnetId": {
          "Ref": "subnet0b0d0e1221573deb6"
        }
      }
    },
    "gw1": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpc0a4f35a1b58419b9f"
        },
        "InternetGatewayId": {
          "Ref": "igw09cc285742015a6aa"
        }
      }
    },
    "route1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtb0f642cba3eacec4f0"
        },
        "GatewayId": {
          "Ref": "igw09cc285742015a6aa"
        }
      },
      "DependsOn": "gw1"
    },
    "dchpassoc1": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "vpc0a4f35a1b58419b9f"
        },
        "DhcpOptionsId": {
          "Ref": "dopt0b590413eb775dac6"
        }
      }
    },
    "ingress1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgdefault"
        },
        "SourceSecurityGroupOwnerId": "907041459849"
      }
    },
    "ingress2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard3"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard3"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress4": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard3"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress5": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsecuritygroupforinboundnfsdv3lxwwerq3iu"
        },
        "IpProtocol": "tcp",
        "FromPort": "2049",
        "ToPort": "2049",
        "SourceSecurityGroupId": {
          "Ref": "sgsecuritygroupforoutboundnfsdv3lxwwerq3iu"
        },
        "SourceSecurityGroupOwnerId": "907041459849"
      }
    },
    "ingress6": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard1"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress7": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard2"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress8": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard2"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress9": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard2"
        },
        "IpProtocol": "tcp",
        "FromPort": "3389",
        "ToPort": "3389",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgdefault"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress2": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard3"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress3": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgsecuritygroupforoutboundnfsdv3lxwwerq3iu"
        },
        "IpProtocol": "tcp",
        "FromPort": "2049",
        "ToPort": "2049",
        "DestinationSecurityGroupId": {
          "Ref": "sgsecuritygroupforinboundnfsdv3lxwwerq3iu"
        }
      }
    },
    "egress4": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard1"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress5": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sglaunchwizard2"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Description": "Template for setting up the vital sign monitoring infrastructure."
}